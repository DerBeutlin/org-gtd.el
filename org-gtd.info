This is org-gtd.info, produced by makeinfo version 6.7 from README.texi.

Copyright (C) 2018-2021 Aldric Giacomoni <trevoke@gmail.com>

   You can redistribute this document and/or modify it under the terms
of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any
later version.

   This document is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.
INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Org GTD: (org-gtd).   An opinionated GTD flow implemented in org-mode.
END-INFO-DIR-ENTRY


File: org-gtd.info,  Node: Top,  Next: Org GTD,  Up: (dir)

Org GTD User Manual
*******************

Org GTD is an attempt to implement the GTD flow described in the GTD
book as faithfully as possible.

This manual is for Org GtD version 2.0.

* Menu:

* Org GTD::
* Using Org GTD::                How Org GTD maps to the GTD flow
* Troubleshooting::

— The Detailed Node Listing —

Org GTD

* Summary::                      quick intro to GTD
* Upgrading::                    How to upgrade your local setup across major versions
* Installing::                   Get Org GTD in your emacs
* Configuring::                  Required and optional system configuration

Upgrading

* 2.0.0 <- 1.1.x: 200 <- 11x.


Installing

* use-package::
* Manually::


Configuring

* The easy way::
* required configuration of sub-packages::
* configuration options for org-gtd::
* Recommended key bindings::


Using Org GTD

* Adding things to the inbox::
* Processing the inbox::
* Accessing NEXT and scheduled actions::
* Cleaning up / archiving completed work::
* Multiple files / refile targets::

Processing the inbox

* Projects::


Accessing NEXT and scheduled actions

* Show next actions::


Troubleshooting

* Projects without a NEXT item::



File: org-gtd.info,  Node: Org GTD,  Next: Using Org GTD,  Prev: Top,  Up: Top

1 Org GTD
*********

* Menu:

* Summary::                      quick intro to GTD
* Upgrading::                    How to upgrade your local setup across major versions
* Installing::                   Get Org GTD in your emacs
* Configuring::                  Required and optional system configuration


File: org-gtd.info,  Node: Summary,  Next: Upgrading,  Up: Org GTD

1.1 Summary
===========

This package tries to replicate as closely as possible the GTD workflow
(see diagram below).

   This package, and this documentation, assume familiarity with the
flow of GTD as described in the book.

   This package provides a system that allows you to capture incoming
things into an inbox, then process the inbox and categorize each item
based on the GTD categories.  It leverages org-agenda to show today’s
items as well as the NEXT items.  It also has a simple project
management system, which currently assumes all tasks in a project are
sequential.
                                         ┌───────┐
                                         │"STUFF"│
                                         └──┬────┘
                                            │
                                         ┌──▼────┐
                                         │IN BOX │
                                         └──┬────┘
                                            │               Eliminate   ┌─────────┐
                                            │             ┌────────────►│  Trash  │
                                        ┌───▼───────┐     │             └─────────┘
                                        │What is it?│     │
                                        └───┬───────┘     │             ┌─────────┐
                                            │             │ Incubate    │ Someday/│
                                            │             ├────────────►│ Maybe   │
     ┌──────────┐  YES (Multi-Step)    ┌────▼────────┐ NO │             └─────────┘
     │ Projects │◄─────────────────────┤   Is it     ├────┤
     └─┬────▲───┤                      │ Actionable? │    │ File        ┌─────────┐
       │    │   └────────────────────┐ └──────┬──────┘    └────────────►│Reference│
       │    │      Review for Actions│        │                         └─────────┘
     ┌─▼────┴───┐                    │        │YES
     │ Planning │                    └───────►│
     └──────────┘                             │
                                       ┌──────▼─────┐     Less than
                       Delegate        │ What's the │     2 minutes     ┌────────┐
                          ┌────────────┤Next Action?├──────────────────►│ DO IT  │
                          │            └───────┬────┘                   └────────┘
                          │                    │
                          │                    │  FOR ME
                          │                    │           Specific Date or Time
                          │                    ├────────────────────────────┐
                          │              ASAP  │                            │
                     ┌────▼─────┐           ┌──▼───────┐              ┌─────▼────┐
                     │          │           │          │              │          │
                     │          │           │          │              │          │
                     │          │           │          │              │          │
                     │          │           │          │              │          │
                     │          │           │          │              │          │
                     └──────────┘           └──────────┘              └──────────┘
                      Waiting For           Next Actions                 Calendar



File: org-gtd.info,  Node: Upgrading,  Next: Installing,  Prev: Summary,  Up: Org GTD

1.2 Upgrading
=============

* Menu:

* 2.0.0 <- 1.1.x: 200 <- 11x.


File: org-gtd.info,  Node: 200 <- 11x,  Up: Upgrading

1.2.1 2.0.0 <- 1.1.x
--------------------

   • rename CANCELED to CNCL


File: org-gtd.info,  Node: Installing,  Next: Configuring,  Prev: Upgrading,  Up: Org GTD

1.3 Installing
==============

This package requires emacs 27.1 or higher.

   This package is on MELPA and MELPA stable under the name ‘org-gtd’.

* Menu:

* use-package::
* Manually::


File: org-gtd.info,  Node: use-package,  Next: Manually,  Up: Installing

1.3.1 use-package
-----------------

Just make sure this is loaded after ‘org-mode’ like so.
     (use-package org-gtd :after org)


File: org-gtd.info,  Node: Manually,  Prev: use-package,  Up: Installing

1.3.2 Manually
--------------

Check out the source code for dependencies and install them.  Then,
clone this repo to a directory of your choice, e.g.
‘~/.emacs.d/packages’.  Finally, add this to your config:
     (add-to-list 'load-path "~/.emacs.d/packages")
     (require 'org-gtd)


File: org-gtd.info,  Node: Configuring,  Prev: Installing,  Up: Org GTD

1.4 Configuring
===============

* Menu:

* The easy way::
* required configuration of sub-packages::
* configuration options for org-gtd::
* Recommended key bindings::


File: org-gtd.info,  Node: The easy way,  Next: required configuration of sub-packages,  Up: Configuring

1.4.1 The easy way
------------------

Just turn on ‘org-gtd-mode’ (‘M-x org-gtd-mode’).  This will set up
emacs, Org mode, and Org GTD’s dependencies.  Turn off ‘org-gtd-mode’ to
restore emacs to pre-org-gtd settings.

   Note, you should still head over to the *note Recommended key
bindings:: section.


File: org-gtd.info,  Node: required configuration of sub-packages,  Next: configuration options for org-gtd,  Prev: The easy way,  Up: Configuring

1.4.2 required configuration of sub-packages
--------------------------------------------

* Menu:

* org-edna::


File: org-gtd.info,  Node: org-edna,  Up: required configuration of sub-packages

org-edna
........

package: <https://www.nongnu.org/org-edna-el/>

   This is one of the dependencies.  This setting change is REQUIRED.
It automatically changes the next TODO heading to NEXT in a project when
you’ve finished the current task.

   You do not need to make this change if you choose to toggle
‘org-gtd-mode’.
     (setq org-edna-use-inheritance t)
     (org-edna-mode 1)


File: org-gtd.info,  Node: configuration options for org-gtd,  Next: Recommended key bindings,  Prev: required configuration of sub-packages,  Up: Configuring

1.4.3 configuration options for org-gtd
---------------------------------------

The most direct way to find out about the configuration options for
org-gtd is to see the customize group: ‘M-x customize-group RET
org-gtd’.  They are all optional because they all come with default
values.

   The only one you may want to change before starting to use Org GTD is
‘org-gtd-directory’, which is the directory that Org GTD will look to
for everything it needs to do.

   The configuration options will also be mentioned in the relevant
subsections of *note Using Org GTD::.


File: org-gtd.info,  Node: Recommended key bindings,  Prev: configuration options for org-gtd,  Up: Configuring

1.4.4 Recommended key bindings
------------------------------

There’s an important keymap you’ll want to make the flow of processing
the inbox smoother.  To limit impact on your emacs configuration, there
is a specific keymap you can use.  The function you’ll want to bind is
‘org-gtd-choose’.  I suggest ‘C-c c’, as in the following example.

     (define-key org-gtd-process-map (kbd "C-c c") #'org-gtd-choose)

   The GTD flow can be roughly split into a top-level steps.  I suggest
using ‘"C-c d"’ as a key chord for these in the global keymap.

   First, capture into the inbox.  :

   • org-gtd-agenda-cancel-project
   • org-gtd-agenda-delegate
   • org-gtd-agenda-projectify
   • org-gtd-cancel-project
   • org-gtd-delegate

   • org-gtd-agenda-daily
   • org-gtd-show-all-next
   • org-gtd-show-stuck-projects

     (("C-c d c" . org-gtd-capture)
      ("C-c d a" . org-agenda-list)
      ("C-c d p" . org-gtd-process-inbox)
      ("C-c d n" . org-gtd-show-all-next)
      ("C-c d s" . org-gtd-show-stuck-projects))

     ;; this is used in a very specific minor mode, so you can have a pretty common keybinding.
     :bind (:map org-gtd-process-map
                   ("C-c c" . org-gtd-clarify-finalize))


File: org-gtd.info,  Node: Using Org GTD,  Next: Troubleshooting,  Prev: Org GTD,  Up: Top

2 Using Org GTD
***************

Here are the categories of actions from GTD that we have to be able to
handle:

   • adding things to the inbox
   • processing the inbox
   • accessing NEXT and scheduled actions
   • cleaning up / archiving completed work

   Other elements of GTD, such as reviews, are currently unimplemented:
as the user, you can simply open the files to review things for now.

* Menu:

* Adding things to the inbox::
* Processing the inbox::
* Accessing NEXT and scheduled actions::
* Cleaning up / archiving completed work::
* Multiple files / refile targets::


File: org-gtd.info,  Node: Adding things to the inbox,  Next: Processing the inbox,  Up: Using Org GTD

2.1 Adding things to the inbox
==============================

The inbox is a file called ‘inbox.org’ in the directory stored in the
variable ‘org-gtd-directory’.  By default this variable is ‘~/gtd’.

   Org GTD provides one function to capture items: ‘M-x
org-gtd-capture’.  In my setup I have this booked globally as such:

     (global-set-key "C-c d c" #'org-gtd-capture)

   This function overrides ‘org-capture’ and uses the variable
‘org-gtd-capture-templates’ to define org-gtd-specific capture
templates.  By default it comes with two templates, one to just capture
a new item, and one to capture an item with a link to the file where you
were when you started the capture.


File: org-gtd.info,  Node: Processing the inbox,  Next: Accessing NEXT and scheduled actions,  Prev: Adding things to the inbox,  Up: Using Org GTD

2.2 Processing the inbox
========================

Processing the inbox means taking everything in the inbox, one at a
time, and refining/categorizing them so they are instantly useful when
you are looking at available next / scheduled actions.

   You can start processing the inbox with ‘org-gtd-process-inbox’.
This will select the inbox buffer and hide everything but the first item
in the inbox, then give you control to refine it.

   When you are done refining it, call ‘M-x org-gtd-choose’ (or hit your
keybinding for it, see *note Recommended key bindings::).  This will
open a transient menu to let you choose how Org GTD should categorize
this item.

   You have a number of possible choices for each item you process.
Subsections will explain how Org GTD handles each one.

[doc/processing-menu]
*[Q]uick Action*
     Quick action.  Do it now, then choose this to mark the item as DONΕ
     and archive it.
*[T]rash*
     This is not actionable and it’s not knowledge for later.  Choose
     this to mark the item as CNCL and archive it.
*[P]roject*
     This is a multi-step action.  I’ll describe how to handle these
     below.
*[C]alendar*
     This is a single item to be done at a given date or time.  You’ll
     be presented with org-mode’s date picker, then it’ll refile the
     item.  You’ll find this in the agenda later.
*[D]elegate*
     Let someone else do this.  Write the name of the person doing it,
     and choose a time to check up on that item.
*[S]ingle action*
     This is a one-off to be done when possible.
*[A]rchive*
     This is knowledge to be stored away.
*[I]ncubate*
     no action now, review later

   In addition you have *[X]* for "exit early", which you can use to
stop processing the inbox and restore emacs to its non-inbox-processing
state.

   After the item-type-specific behavior, you will have the option to
add custom decorations to each item, based on how you prefer to think
about (filter, find, etc.)  the items when you do GTD.

   The decorations are tracked in ‘org-gtd-process-item-hooks’, a list
of functions.  By default there is one element in the list, to add tags
to the item.

   This process will continue, item after item, until you hit *x* to
exit early or until you run out of items to process.

* Menu:

* Projects::


File: org-gtd.info,  Node: Projects,  Up: Processing the inbox

2.2.1 Projects
--------------

A "project" is defined as a top-level org heading with a set of
second-level org headings.  When you choose "project" and enter the
editing mode, create such a headline structure, like in the following
example.

   file:doc/project-processing.png (doc/project-processing.png)

   As indicated above, when you are finished creating your headline
structure, hit your chosen keybinding to exit the edit mode (in the
above screenshot, ‘C-c c’) and move on to processing the next item.

   A project is defined as "completed" when all its tasks are marked as
DONE.  A project is defined as "canceled" when its last task is marked
as CNCL.

   You can cancel a project by calling ‘org-gtd-agenda-cancel-project’
from the agenda view, when the point is on the next task of the project.

   DO NOTE: it is surprisingly difficult to add a custom note when
canceling, so if you want to add a note explaining why you canceled the
project, you will have to do so manually.

   You can archive (move to the archive file, using the org-mode
feature) completed and canceled projects by using
‘org-gtd-archive-completed-items’.


File: org-gtd.info,  Node: Accessing NEXT and scheduled actions,  Next: Cleaning up / archiving completed work,  Prev: Processing the inbox,  Up: Using Org GTD

2.3 Accessing NEXT and scheduled actions
========================================

Here’s what the agenda may look like when you’ve processed the inbox a
bit.

[doc/agenda]
* Menu:

* Show next actions::


File: org-gtd.info,  Node: Show next actions,  Up: Accessing NEXT and scheduled actions

2.3.1 Show next actions
-----------------------

One of the ways to see what’s next for you to do is to see all the next
actions ( ‘C-c d n’ ).

[doc/show-all-next]

File: org-gtd.info,  Node: Cleaning up / archiving completed work,  Next: Multiple files / refile targets,  Prev: Accessing NEXT and scheduled actions,  Up: Using Org GTD

2.4 Cleaning up / archiving completed work
==========================================

Doing this without user intervention is tricky, as it makes undoing
actions more complicated.  As such, Org GTD provides a function that
will go through the ‘org-gtd-directory’ files, find the headings that
belong to Org GTD (see *note Multiple files / refile targets::), and
archive the finished items.

   The variable ‘org-gtd-archive-location’ hosts a *function* that
returns a string matching the ‘org-archive-location’ definition.  It is
a function in order to make the filename entirely dynamic.

   The function to archive everything is ‘M-x
org-gtd-archive-completed-items’.


File: org-gtd.info,  Node: Multiple files / refile targets,  Prev: Cleaning up / archiving completed work,  Up: Using Org GTD

2.5 Multiple files / refile targets
===================================

If you would like to add new refile targets, it’s simple.  Add a
top-level heading and make sure it has the following properties drawer.
     :PROPERTIES:
     :TRIGGER: next-sibling todo!(NEXT)
     :ORG_GTD: Projects
     :END:


File: org-gtd.info,  Node: Troubleshooting,  Prev: Using Org GTD,  Up: Top

3 Troubleshooting
*****************

* Menu:

* Projects without a NEXT item::


File: org-gtd.info,  Node: Projects without a NEXT item,  Up: Troubleshooting

3.1 Projects without a NEXT item
================================

Sometimes things break.  Use ‘C-c d s’ to find all projects that don’t
have a NEXT item, which is to say, all projects that the package will
not surface and help you finish.



Tag Table:
Node: Top735
Node: Org GTD1979
Node: Summary2366
Node: Upgrading6960
Node: 200 <- 11x7118
Node: Installing7250
Node: use-package7534
Node: Manually7746
Node: Configuring8112
Node: The easy way8357
Node: required configuration of sub-packages8785
Node: org-edna9049
Node: configuration options for org-gtd9526
Node: Recommended key bindings10268
Node: Using Org GTD11636
Node: Adding things to the inbox12324
Node: Processing the inbox13139
Node: Projects15610
Node: Accessing NEXT and scheduled actions16832
Node: Show next actions17204
Node: Cleaning up / archiving completed work17466
Node: Multiple files / refile targets18328
Node: Troubleshooting18763
Node: Projects without a NEXT item18921

End Tag Table


Local Variables:
coding: utf-8
End:
